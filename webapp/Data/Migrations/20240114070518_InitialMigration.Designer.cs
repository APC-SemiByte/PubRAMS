// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapp.Data;

#nullable disable

namespace webapp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240114070518_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapp.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CS",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Code = "IT",
                            Name = "Information Technology"
                        });
                });

            modelBuilder.Entity("webapp.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LeaderId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LeaderId = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                            Name = "The Villasomethings"
                        });
                });

            modelBuilder.Entity("webapp.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdviserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentUrl")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecDirId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PrfUrl")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProofreaderId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("AdviserId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExecDirId");

                    b.HasIndex("GroupId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("ProofreaderId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StateId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("webapp.Models.ProjectTag", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProjectTag");
                });

            modelBuilder.Entity("webapp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desc = "Doesn't do stuff",
                            Name = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Desc = "Does stuff",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Desc = "Does stuff",
                            Name = "Instructor"
                        },
                        new
                        {
                            Id = 4,
                            Desc = "Does stuff",
                            Name = "Executive Director"
                        },
                        new
                        {
                            Id = 5,
                            Desc = "Does stuff",
                            Name = "English Office Head"
                        },
                        new
                        {
                            Id = 6,
                            Desc = "Does stuff",
                            Name = "English Office Faculty"
                        },
                        new
                        {
                            Id = 7,
                            Desc = "Does stuff",
                            Name = "Librarian"
                        },
                        new
                        {
                            Id = 8,
                            Desc = "Does stuff",
                            Name = "PBL Coordinator"
                        },
                        new
                        {
                            Id = 9,
                            Desc = "Does stuff",
                            Name = "Program Director"
                        });
                });

            modelBuilder.Entity("webapp.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("School");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SoCIT",
                            Name = "School of Computing and Information Technologies"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SoMA",
                            Name = "School of Multimedia and Arts"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SoM",
                            Name = "School of Management"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SoE",
                            Name = "School of Engineering"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SHS",
                            Name = "Senior High School"
                        },
                        new
                        {
                            Id = 6,
                            Code = "",
                            Name = "Graduate School"
                        });
                });

            modelBuilder.Entity("webapp.Models.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = "abcdefghijklmnopqrstuvwxyz0123486789",
                            Email = "johnd@apc.edu.ph",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = "9876543210zyxwvutsrqponmlkjihgfedcba",
                            Email = "janed@apc.edu.ph",
                            FirstName = "Jane",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("webapp.Models.StaffRole", b =>
                {
                    b.Property<string>("StaffId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("StaffId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("StaffRole");

                    b.HasData(
                        new
                        {
                            StaffId = "abcdefghijklmnopqrstuvwxyz0123486789",
                            RoleId = 2
                        },
                        new
                        {
                            StaffId = "abcdefghijklmnopqrstuvwxyz0123486789",
                            RoleId = 3
                        },
                        new
                        {
                            StaffId = "9876543210zyxwvutsrqponmlkjihgfedcba",
                            RoleId = 4
                        },
                        new
                        {
                            StaffId = "9876543210zyxwvutsrqponmlkjihgfedcba",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("webapp.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("webapp.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Block")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                            Email = "cgvillareal@student.apc.edu.ph",
                            FirstName = "Chuse",
                            LastName = "Villareal"
                        },
                        new
                        {
                            Id = "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
                            Email = "cgvillarole@student.apc.edu.ph",
                            FirstName = "Cheese",
                            LastName = "Villarole"
                        });
                });

            modelBuilder.Entity("webapp.Models.StudentGroup", b =>
                {
                    b.Property<string>("StudentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("StudentGroup");

                    b.HasData(
                        new
                        {
                            StudentId = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                            GroupId = 1
                        },
                        new
                        {
                            StudentId = "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
                            GroupId = 1
                        });
                });

            modelBuilder.Entity("webapp.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CSPROJ",
                            Name = ""
                        },
                        new
                        {
                            Id = 2,
                            Code = "PROJMAN",
                            Name = "Project Management"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SOFTDEV",
                            Name = "Software Development"
                        });
                });

            modelBuilder.Entity("webapp.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("webapp.Models.Group", b =>
                {
                    b.HasOne("webapp.Models.Student", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("webapp.Models.Project", b =>
                {
                    b.HasOne("webapp.Models.Staff", "Adviser")
                        .WithMany()
                        .HasForeignKey("AdviserId");

                    b.HasOne("webapp.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Staff", "ExecDir")
                        .WithMany()
                        .HasForeignKey("ExecDirId");

                    b.HasOne("webapp.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Staff", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.HasOne("webapp.Models.Staff", "Proofreader")
                        .WithMany()
                        .HasForeignKey("ProofreaderId");

                    b.HasOne("webapp.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adviser");

                    b.Navigation("Course");

                    b.Navigation("ExecDir");

                    b.Navigation("Group");

                    b.Navigation("Instructor");

                    b.Navigation("Proofreader");

                    b.Navigation("School");

                    b.Navigation("State");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("webapp.Models.ProjectTag", b =>
                {
                    b.HasOne("webapp.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("webapp.Models.StaffRole", b =>
                {
                    b.HasOne("webapp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("webapp.Models.StudentGroup", b =>
                {
                    b.HasOne("webapp.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapp.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
